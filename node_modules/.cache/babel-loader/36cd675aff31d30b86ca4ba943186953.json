{"ast":null,"code":"import _classCallCheck from \"/Users/clarknewell/Desktop/webDev/max-react4/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/clarknewell/Desktop/webDev/max-react4/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/clarknewell/Desktop/webDev/max-react4/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/clarknewell/Desktop/webDev/max-react4/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/clarknewell/Desktop/webDev/max-react4/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/clarknewell/Desktop/webDev/max-react4/src/containers/Counter/Counter.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      counter: 0\n    };\n\n    _this.counterChangedHandler = function (action, value) {\n      switch (action) {\n        case 'inc':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter + 1\n            };\n          });\n\n          break;\n\n        case 'dec':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter - 1\n            };\n          });\n\n          break;\n\n        case 'add':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter + value\n            };\n          });\n\n          break;\n\n        case 'sub':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter - value\n            };\n          });\n\n          break;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(CounterOutput, {\n        value: this.props.ctr,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Increment\",\n        clicked: this.props.onIncrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Decrement\",\n        clicked: this.props.onDecrementCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Add 5\",\n        clicked: this.props.onAddToCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Subtract 5\",\n        clicked: this.props.onSubtractFromCounter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ctr: state.counter\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIncrementCounter: function onIncrementCounter() {\n      return dispatch({\n        type: 'INCREMENT'\n      });\n    },\n    onDecrementCounter: function onDecrementCounter() {\n      return dispatch({\n        type: 'DECREMENT'\n      });\n    },\n    onAddToCounter: function onAddToCounter() {\n      return dispatch({\n        type: 'ADD'\n      });\n    },\n    onSubtractFromCounter: function onSubtractFromCounter() {\n      return dispatch({\n        type: 'SUBTRACT'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["/Users/clarknewell/Desktop/webDev/max-react4/src/containers/Counter/Counter.js"],"names":["React","Component","connect","CounterControl","CounterOutput","Counter","state","counter","counterChangedHandler","action","value","setState","prevState","props","ctr","onIncrementCounter","onDecrementCounter","onAddToCounter","onSubtractFromCounter","mapStateToProps","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport CounterControl from '../../components/CounterControl/CounterControl';\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\n\nclass Counter extends Component {\n    state = {\n        counter: 0\n    }\n\n    counterChangedHandler = ( action, value ) => {\n        switch ( action ) {\n            case 'inc':\n                this.setState( ( prevState ) => { return { counter: prevState.counter + 1 } } )\n                break;\n            case 'dec':\n                this.setState( ( prevState ) => { return { counter: prevState.counter - 1 } } )\n                break;\n            case 'add':\n                this.setState( ( prevState ) => { return { counter: prevState.counter + value } } )\n                break;\n            case 'sub':\n                this.setState( ( prevState ) => { return { counter: prevState.counter - value } } )\n                break;\n        }\n    }\n\n    render () {\n        return (\n            <div>\n                <CounterOutput value={this.props.ctr} />\n                <CounterControl label=\"Increment\" clicked={this.props.onIncrementCounter} />\n                <CounterControl label=\"Decrement\" clicked={this.props.onDecrementCounter} />\n                <CounterControl label=\"Add 5\" clicked={this.props.onAddToCounter} />\n                <CounterControl label=\"Subtract 5\" clicked={this.props.onSubtractFromCounter} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ctr: state.counter\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIncrementCounter: () => dispatch({type: 'INCREMENT'}),\n        onDecrementCounter: () => dispatch({type: 'DECREMENT'}),\n        onAddToCounter: () => dispatch({type: 'ADD'}),\n        onSubtractFromCounter: () => dispatch({type: 'SUBTRACT'})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);"]},"metadata":{},"sourceType":"module"}